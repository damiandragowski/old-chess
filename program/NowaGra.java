package program;
import java.net.*;
import java.io.*;
import javax.swing.*;
import klient.*;
import serwer.*;
import klientserwer.*;

public class NowaGra extends javax.swing.JDialog {
    private DanePolaczenia d1;
    private klientDanePolaczenia d2;
    private OknoProgramu op;
    

    private Czytacz czytacz;
    private Pisarz pisarz;
    private Socket gniazdo;
    private int czas; //czas gry
    

    public NowaGra(OknoProgramu rodzic) {
        super(rodzic, true);
        op = rodzic;
        d1 = new DanePolaczenia(op);
        d2 = new klientDanePolaczenia(op);
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        getContentPane().setLayout(null);

        setTitle("Nowa gra");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jButton1.setMnemonic('k');
        jButton1.setText("Konfiguracja");
        jButton1.setToolTipText("Ustawia regu\u0142y gry (czas i numer portu).");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton1);
        jButton1.setBounds(100, 10, 120, 26);

        jButton2.setMnemonic('o');
        jButton2.setText("Konfiguracja");
        jButton2.setToolTipText("Ustawia szczeg\u00f3\u0142y po\u0142\u0105czenia (adres gracza i numer portu, na kt\u00f3rym czeka na przeciwnika.");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton2);
        jButton2.setBounds(100, 50, 120, 26);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        getContentPane().add(jPanel1);
        jPanel1.setBounds(101, 135, 0, 0);

        jButton3.setMnemonic('p');
        jButton3.setText("Connect");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton3);
        jButton3.setBounds(20, 90, 90, 26);

        jButton4.setMnemonic('a');
        jButton4.setText("Anuluj");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        getContentPane().add(jButton4);
        jButton4.setBounds(130, 90, 69, 26);

        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Server");
        buttonGroup1.add(jRadioButton1);
        getContentPane().add(jRadioButton1);
        jRadioButton1.setBounds(0, 10, 104, 24);

        jRadioButton2.setText("Klient");
        buttonGroup1.add(jRadioButton2);
        getContentPane().add(jRadioButton2);
        jRadioButton2.setBounds(0, 50, 57, 24);

        pack();
    }//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        hide();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Serwer s = op.getSerwer();
        if (s != null) s.usun();
            
        if (jRadioButton2.isSelected())
            try {
                klient();
                op.gra = new Gra(op, op.getSzachownica(), false, gniazdo, czytacz, pisarz, czas);  // biale=false bo jako klient
                hide(); 
                return; 
            } catch (Rezygnacja e) {
            } catch (GraczZajety e) {
            } catch (BladProtokolu e) {
            } catch (IOException e) {
            }
        
        if (jRadioButton1.isSelected())
            try {
                op.setSerwer(new Serwer(op, d1));
                op.menuZegar(true);
                hide();
                return; 
            } catch (Rezygnacja e) { 
            } catch (BladDanych e) {
                JOptionPane.showMessageDialog(null, "nieprawidlowy port");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "blas listen");
            }
        
        JOptionPane.showMessageDialog(op, "nie utworozno nowej gry");
        op.getSzachownica().setEnabled(false);     
        op.menuPoddajeSie(false);
        op.menuZegar(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        d2.show();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        d1.show();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
   
    private void klient() throws Rezygnacja, GraczZajety, BladProtokolu, IOException{
        int port = d2.getPort();
        InetAddress ip = d2.getIP();
                
        gniazdo=null;
        try {
            gniazdo = new Socket(ip, port);
            InputStream in = gniazdo.getInputStream();
            OutputStream out = gniazdo.getOutputStream();
            
            czytacz = new Czytacz(in);
            pisarz = new Pisarz(out);

            String buf = czytacz.czytajPaczke();
            if (buf.equals(Jezyk.BUSY)) {
                czytacz.wylacz(); 
                pisarz.wylacz(); 
                gniazdo.close();
                JOptionPane.showMessageDialog(this, "port jest obecnie zajmowany przez innego uzytkownika");
                throw new GraczZajety();
            } 
            
            if (buf.equals(Jezyk.INFO)) {
                buf = czytacz.czytajPaczke();
                try {
                    czas = Integer.parseInt(buf);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Blad komendy");
                    czytacz.wylacz();
                    pisarz.wylacz();
                    gniazdo.close();
                    throw new BladProtokolu();
                }
                

                String info = czytacz.czytajPaczke();               
                

                DanePrzeciwnika dp = new DanePrzeciwnika(op, ip, czas, info);
                dp.show();
                if (dp.isAnulowano()) { 
                    pisarz.wyslijPaczke(Jezyk.BYE);
                    dp.dispose();
                    czytacz.wylacz();
                    pisarz.wylacz();
                    gniazdo.close();
                    throw new Rezygnacja();
                }
                dp.dispose();
                

                buf = d2.getOpis();
                pisarz.wyslijPaczke(Jezyk.INFO);
                pisarz.wyslijPaczke(buf);
                
                buf = czytacz.czytajPaczke();
                if (buf.equals(Jezyk.BYE)) {
                    JOptionPane.showMessageDialog(this, "gra odrzucona");
                    czytacz.wylacz();
                    pisarz.wylacz();
                    gniazdo.close();
                    throw new Rezygnacja();
                }
                if (buf.equals(Jezyk.OK)) {
                    return;
                } else {
                    JOptionPane.showMessageDialog(this, "blad komendy");
                    czytacz.wylacz();
                    pisarz.wylacz();
                    gniazdo.close();
                    throw new BladProtokolu();
                }
                
            } else {
                JOptionPane.showMessageDialog(this, "blad komendy");
                czytacz.wylacz();
                pisarz.wylacz();
                gniazdo.close();
                throw new BladProtokolu();
            }
            
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "polacenie nie moze byc zrealizowane");
            try {
                if (gniazdo!=null) gniazdo.close();
            } catch (IOException e2) {
            }
            throw e;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    // End of variables declaration//GEN-END:variables
    
}